= Способы адресации операндов, примеры команд с использованием различных способов адресации.

- регистровая; 
```asm mov AX, BX```

- непосредственная;

```asm add AX, 5```

- прямая;
```asm
mov AX, ES:0100h
; ...
mov CX, DS:String_1
```
- косвенно-регистровая;
```asm
lea BX, WordArray
mov word ptr [BX], 0BEEFh

add BX, 2
mov word ptr [BX], 200
```
- по базе со смещением;
```asm lea BX, ByteArray
mov AX, [BX + 2]
; или
mov AX, [BX] + 2
; или
mov AX, 2[BX]```
- прямая с индексированием;
```asm mov AX, WordArray[SI]```
- по базе с индексированием;
```asm mov AX, Arr[SI][DI]```
- ? косвенная с масштабированием;
```asm mov AX, [BX  4]```
- ? базово-индексная с масштабированием;
```asm mov BX, [SI][DI  4]```
- ? базово-индексная с масштабированием и смещением;
```asm mov AL, [BX][DI  2 + 1]```

Замечание: в квадратных скобках могут упоминаться только регистры BX, BP, SI
и DI. Важно помнить, что адреса, хранящиеся в BP, по умолчанию будут связываться
Ассемблером с сегментом стека. Поэтому если программист не реализует передачу
аргументов в процедуру через стек, то лучше этот регистр не использовать.