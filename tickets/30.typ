= Организация работы со строкам переменной длины в Ассемблере.

Можно подойти к этой проблеме с двух сторон:

- как в C/C++, оканчивать строки спецаильным символом-терминатором. Этот способ позволяет создавать строки неограниченной длины, но чтобы найти конец строки, зная адрес ее начала, придется сделать N сравнений.
-  как в Pascal, задать максимально возможный размер строки (например, 255 байт), и первый байт всех строк использовать для хранения ее текущей длины. Тогда поиск конца строк будет происходить за линейное время.

Пример работы с «паскалевским» вариантом строк. Нужно найти в строке S символ "$convolve$" и удалить его из строки:

```asm 
      ; где-то в сегменте описана строка S, первым
      ; байтом хранящая свой размер
      mov AX, @data
      mov DS, AX    ; DS = @data
      push DS
      pop ES        ; ES = DS
      cld           ; DF = 0
      lea DI, S + 1 ; DI = (offset S) + 1
      xor CH, CH
      mov CL, S     ; длину строки в CX
      mov AL, '*'
repne scasb         ; поиск '*'
      jne finish 
       
      ;звездочка найдена на i-й позиции
      mov SI, DI    ; SI = i + 1
      dec DI        ; DI = i
rep movsb
      dec S               ; удалили символ, размер строки уменьшился
finish:
```
