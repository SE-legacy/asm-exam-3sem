= Макросы в Ассемблере, их описание и использование.

Общий вид *макроопределения*:

```asm
<имя макроса> macro <формальные параметры>
    local <список имен>
        <тело>
endm
```
\<имя макроса> будет использоваться при обращении к нему. 

\<формальные параметры> записываются через запятую, это набор локальных имен. Директива local \<список имен> перечисляет через запятую имена меток, которые будут локальными для одного макрорасширения.

*Марокоманда* --- обращение к макросу:

#align(center)[
  ```asm
  <имя макроса> <фактические параметры>
  ```
]

Фактические параметры указываются через запятую или через пробел. Фактический параметр может быть заключен в кавычки или \<>, если он содержит запятые, пробелы или точки с запятой.

 С помощью exitm можно досрочно выйти из макроса.

С помощью purge \<имя мароса> можно удалить созданное макроопределения для оставшейся программы.

Макрос if x \< y then goto L:

```asm
If_Less_Then_L macro x, y, L
    mov AX, x
    mov AX, y
    jl L 
endm

    ; Использование: поиск минимального их 3 чисел
    ; DX = min(A, B, C)
    mov DX, A 
    If_Less_Then_L A, B, M1
    mov DX, B
M1:
    If_Less_Then_L DX, C, M2
    mov DX, C 
M2:
    ; ...
```

С помощью макросов можно упростить обращение к процедурам:

```asm
GCD macro x, y
    mov AX, x
    mov BX, y
    call GCD_Func     ; AX = НОД(x, y)
endm

    ; Вычислить CX = НОД(A, B) + НОД(C, D)
    GCD A, B          ; AX = НОД(A, B)
    mov CX, AX        ; CX = НОД(A, B)
    GCD C, D          ; AX = НОД(C, D)
    add CX, AX        ; CX = НОД(A, B) + НОД(C, D)
```
