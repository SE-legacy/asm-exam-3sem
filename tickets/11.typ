= Команды безусловной передачи управления, обращения к подпрограмме и возврата из подпрограммы.

Команды передачи управления позволяют изменить ход вычислительного процесса. В языке Ассемблер есть команы условной передачи управления, безусловной передачи управления и команды организации циклов.

== Команда безусловной передачи:

```asm
jmp M1 ; Прыжок на метку M1, находящуюся в том же кодовом сегменте

jmp [BX] ; Прыжок на инструкцию со смещением, находящимся в BX
```

Если управление должно передаться на метку в другом кодовом сегменте, то та метка должна быть объявлена *public M2*, а в сегменте, из которого происходит прыжок, должно быть *extrn M2: far*.

Команда *jmp*, если передача управления $quote.angle.l$дальняя$quote.angle.r$, займет после ассемблирования 5 байтов, а если $quote.angle.l$ближняя$quote.angle.r$, то 3 байта. Также, если прыжок осуществляется не более, чем на --- 128 или 127 байтов, то можно использовать $quote.angle.l$короткую$quote.angle.r$ версию инструкции:

```asm
jmp short <метка>
```

== Команда обращения к подпрограмме:

```asm
call <имя>
```

При обращении к процедуре *near*, в стеке сохраняется адрес команды, следующей за *call (IP)*. При обращении к процедуре *far*, в стеке сохраняется адрес текущего кодового сегмента и адрес следующей за *call* команды (CS:IP).

*Возврат из процедуры* реализуется при помощи команды *ret*. Существуют следующие варианты:

- ret[N] --- возврат из текущей процедуры;
- retn[N] --- возврат из процедуры типа near;
- retf[N] --- возврат из процедуыр типа far.

[N] --- необязательный параметр. Определяет кол-во байт, которое следует удалить из стека, уже после считывания адреса возврата.
