= Функции DOS для вывода на экран, пример.

Вывод информации на экран в текстовом режиме может быть осуществлен несколькими способами:
+ Использовав файловую функцию int 21h, AH = 40h.
+ Использовав функцию ввода/вывода прерывания int 21h --
  ```asm int 21h, AH = 09h,
  int 21h, AH = 02h.```
+ Обратившись к драйверу экрана (int 10h).
+ С помощью прямой записи в страницу видеобуфера.

#align(center)[*Функции DОЅ для прерывания INT 21h.*]
1) _Вывод символа на экран в текущую позицию курсора 02һ с проверкой на Ctrl/Break._
Вызов: АН = 02h; DL = ASCII-код выводимого символа

Возврат: AL- код выводимого символа, но если DL = 09һ-табуляция, то в AL возвращается 20.

Если в ходе работы этой функции были нажаты клавиши Ctrl/Break, то вызывается прерывание, которое осуществляет выход из
В программы.

*Вывод текстовой информации на экран*

Функция 02һ обрабатывает некоторые управляющие символы: 
- вывод символа ВЕС (07һ) приводит к звуковому сигналу; - BS (08h) - перемещает курсор влево на одну позицию;
- НТ (09һ) - вставляет несколько пробелов;
- LF (0Аh) - опускает курсор на 1 позицию вниз (перевод строки); 
- CR (0Dh) - переход на начало текущей строки (возврат каретки). 
2) _Вывод символа на экран в текущую позицию без проверки на Ctrl/Break и без обработки управляющих символов (CR, LF, HT, BS) - 06h_
вызов: АН = 06h; DL = ASCII-код символа

возврат: AL- код выведенного символа, = (DL)

3) _Вывод на экран (в стандартное устройство STDOUT) строки символов из буфера пользователя с проверкой на Ctrl/Break - 09h_
вызов: АН = 09h; DS:DX = адрес строки, заканчивающейся символом ```asm $(24h)```

возврат: AL = 24h код последнего символа.
- В остальном действие функции 09һ аналогично действию функции 02һ.

ример. Вывод на экран таблицы 16 × 16 всех ASCII-символов

```asm
.model tiny
.code
org 100h
start:
        mov CX, 256 ; для цикла
        mov DL, 0 ; код символа
        mov AH, 02h ; номер функции
l1:
        int 21h ; вызвать функцию
        inc DL
        test DL, 0Fh ; если DL не кратно 16,
        jnz c1 ; то на c1

        ; иначе
        push DX ; сохранить код в стеке

        ; Вывод CRLF
        mov DL, 0Dh
        int 21h
        mov DL, 0Ah
        int 21h

        pop DX ; восстановить код из стека
c1:
        loop l1
end start
```