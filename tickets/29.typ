= Команды для работы со строками: CMPS, SCAS, INS, OUTS.

Команды cmps выполняют сравнение (как cmp) байтов, слов или двойных слов по адресам DS:SI и ES:DI и устанавливают нужные флаги соответственно. Аналогично командам movs, после основной операции SI и DI увеличиваются или уменьшаются в зависимости от флага DF:
- cmpsb;
- cmpsw;
- cmpsd;
- cmps M, M. Подобно movs M, M, сравнивает байт, слово или двойное слово в зависимости от размера предоставленных явных операндов (который конечно же должен быть одинаковым). После операции изменяет регистры SI и DI. Абсолютно также, как и с movs M, M, лучше избегать использования этой формы, но в случае, если надо переопределить селектор DS на какой-нибудь другой селектор, то эта форма позволяет такое сделать.

cmps можно использовать с префиксами
- repe | repz, чтобы сравнение выполнялось до первого несовпадения;
- repne | repnz, чтобы сравнение выполнялось до первого совпадения.

Команды scas сравнивают значение регистра AL, AX или EAX со значением в области памяти по адресу ES:DI, устанавливают флаги, как после cmp. После сравнения DI  увеличивается или уменьшается:
- scasb;
- scasw;
- scasd;
- scas M. В зависимости от размера операнда M, сравнивает значение в регистре со значением в памяти по адресу ES:DI, после чего изменяет DI в соответствии с флагом DF. Нет никакого смысла использовать, так как, подобно другим командам, селектор ES никоим образом заменить нельзя.

Команды ins считывают байт, слово или двойное слово из порта ввода/вывода, номер которого расположен в регистре DX, результат считывания записывается в область памяти по адресу ES:DI:
- insb;
- insw;
- insd;
- ins M, DX. Ничего нового, в зависимости от размера M считывает байт, слово или двойное слово из порта с номером DX в память по адресу ES:DI. Так же лучше избегать этой формы, потому что никакого преимущества у нее нет (ES заменить нельзя).

И наконец, команды outs записывают в порт ввода/вывода с номером DX значение в памяти, находящееся по адресу DS:SI:
- outsb;
- outsw;
- outsd;
- outs DX, M.

История повторяется... Если очень надо заменить селектор DS на какой-то другой, то это можно сделать такой формой команды.

Пример использования команд. Простая пересылка одной области памяти в другую:

```asm
.data
X dw 100 dup (?)
Y dw 100 dup (?)
Addr_X dd X
Addr_Y dd Y
.code
; ...
cld ; DF = 0
lds SI, Addr_X ; DS = @data, SI = offset X
les DI, Addr_Y ; ES = @data, DI = offset Y
mov CX, 100 ; количество машинных слов
rep movsw ; переслать 100 машинных слов
```

В строке S заменить первое вхождение символа '$convolve$' на ' . ':В строке S заменить первое вхождение символа '$convolve$' на ' . ':

```asm
data
S db 500 dup (?)
.code
; ... инициализация S ...
cld ; DF = 0
mov AX, @data
mov DS, AX ; DS = @data
push DS
pop ES ; ES = DS = @data
lea DI, S ; DI = offset S
mov CX, 500
mov AL, '*'
repne scasb ; до первой '*' или до конца строки
jne finish
mov byte ptr ES:[DI - 1], '.' ; заменить
finish: ; '*' не найдена
```
