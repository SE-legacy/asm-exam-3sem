= Основные элементы языка Ассемблера: имена, константы, переменные, выражения.

*Символические имена* в Ассемблере могут состоять из строчных и прописных букв латинского алфавита, цифр от 0 до 9 и символов \_.

В программе на Ассемблере могут использоваться константы пяти типов:

+ Целые двоичные ($11000011b$),
+ Десятичные ($125$),
+ Шестнадцатеричные ($21h$, $0A B h$),
+ Действительные с плавающей точкой ($0.547e-2$),
+ Символьные ($\'A\'$).

Константам можно присваивать символические имена при помощи директив *equ* и *=*:

```asm
M equ 27
B = 21h
```

Строковые литералы:

- $\'a b c 123\'$, 
- $\"h e l l o\"$.

*Переменные* объявляются при помощи директивы определения $d X$, где $X$ зависит от размера переменной:

- $b y t e$ --- 1 байт --- $d b$;
- $w o r d$ --- 2 байта --- $d w$;
- $d w o r d$ --- 4 байта --- $d d$;
- ...

Пример:

```asm
A dw 24000
CRLF db 0Ah, 0Dh ; Это строк-массив из двух символов, каждый из которых занимает байт, поэтому db.
```

У этой директивы также существует другой вариант, упрощающий выделение памяти под массивы данных:

```asm
Arr db 20 dup(0)  ; Выделить место под 20 байт и заполнить память нулями
```

Если память ничем инициализировать не нужно, можно использовать специальный символ _?_.

Существуют следующие операции:

- Арифметические:
  - +,
  - -,
  - \*,
  - /,
  - mod;
- Логические:
  - not,
  - and,
  - or,
  - xor;
- Сравнения:
  - lt,
  - le,
  - eq,
  - ne,
  - gt,
  - ge;
- Сдвига:
  - shl,
  - shr;
- offset \<имя> --- смещение операна внутри сегмента.

Привычные с виду арифметичкские выражения на языке Ассемблера могут быть только *константными выражениями*. Это значит, что все операнды выражения должны быть определены на этапе ассемблирования программы. Например, допустимыми выражениями будут

```asm
1000100b + 37,
M lt B,
27 shl 3.
```
