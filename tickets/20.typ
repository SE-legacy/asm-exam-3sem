= Команды для организации циклов в Ассемблере.

Команды для организации циклов:

- loop \<метка> --- $C X = C X - 1$, и если $C X eq.not 0$, то перейти на \<метка>.
- loope \<метка> | loopz \<метка> --- $C X = C X - 1$. Если $C X = 0$, то выйти из цикла. Иначе проверить флаг $Z F$:
  - если $Z F = 0$, то выйти из цикла;
  - если $Z F = 1$, то совершить переход на \<метка>;
- loopne \<метка> | loopnz \<метка> --- $C X = C X - 1$. Если $C X = 0$, то выйти из цикла. Иначе проверить флаг $Z F$:
  - если $Z F = 0$, то совершить переход на \<метка>;
  - если $Z F = 1$, то выйти из цикла.

Пример использования:

```asm
    mov CX, 100
l1:
    ; ...
    loop l1
l2:
    ; ...
```

Если $C X$ нужен внутри цикла:

```asm
    mov CX, 100
l1:
    push CX
    ; ...
    pop CX
    loop l1
l2:
    ; ...
```
