= Работа с подпрограммами в Ассемблере, способы передачи параметров.

В Ассемблере один вид подпрограмм --- процедуры.

*Общий вид процедуры:*

#align(center)[
  ```asm
  <имя процедуры> proc <параметр>
      <тело процедуры>
      ret
  <имя процедуры> endp
  ```
]

где \<параметр> --- near или far.

Размещать подпрограммы лучше так, чтобы исполнение их кода не происходило без команды *call*. То есть до первой исполняемой командды или после *ret* главной подпрограммы.

Параметры можно передавать разными способами:

- по значению;
- по ссылке;
- по возвращаемомму значению;
- по результату;
- отложенными вычислениями.

Также различают передачу

+ *через регистры* --- параметры записываются в регистры, процедура сразу их использует. Самый простой и эффективный способ. Но нельзя передать большое число параметров, так как свободные регистры могут закончится.
+ *в глобальных переменных* --- в сегменте данных объявляется глобальная переменная, позже процедура к ней обращается. Недостаток этого способа в том, что становится невозможна рекурсия.
+ *через стек* --- параметры отправляются в стек команадами *push*, а подпрограммы извлекает их из стека с помощью регистров SP и BP. Оптимальный способ, используется современными языками программирования.
+ *в потоке кода* --- данные размещаются в вызывающем коде сразу за командой *call*. Подпрограмма, используя адрес возврата, который лежит в стеке (бывшее значение IP или CS:IP), извлекает их. Этот способ менее эффективен, чем уже перечисленные.
+ *в блоке параметров* --- в сегменте данных создается специальный блок, содержащий все необходимые параметры. Вызываемая подпрограмма получает адрес этого блока любым вышеперечисленным способом или даже из другого блока параметров.
 
Пример такой передачи данных: функция DOS, находящая первый файл, удовлетворяющий ASCIIZ-спецификации (int 21h, AH = 4Eh). Эта функция возвращает блок DTA, если файл был найден

https://stanislavs.org/helppc/dta.html
